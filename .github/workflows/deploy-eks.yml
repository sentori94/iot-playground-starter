name: Deploy to EKS

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Tag de l'image ECR à déployer (ex: latest ou sha-abc1234)"
        required: false
        default: "latest"

permissions:
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  EKS_CLUSTER_NAME: ${{ vars.EKS_CLUSTER_NAME }}
  K8S_NAMESPACE: sensors
  K8S_DEPLOYMENT: sensors-api
  IMAGE_URI: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.ECR_REPOSITORY }}

jobs:
  deploy-eks:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-eks
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install kubectl
        run: |
          sudo apt-get update -y
          sudo apt-get install -y kubectl

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name "$EKS_CLUSTER_NAME" --region "$AWS_REGION"

      - name: Set image & rollout
        env:
          TAG: ${{ github.event.inputs.image_tag }}
        run: |
          kubectl apply -f k8s.yml 
          set -e
          IMAGE="${IMAGE_URI}:${TAG:-latest}"
          echo "Deploying image: $IMAGE"
          # Met à jour l'image pour TOUS les containers du Deployment (évite un mismatch de nom)
          kubectl -n "$K8S_NAMESPACE" set image deploy/"$K8S_DEPLOYMENT" "*=$IMAGE" --record
          kubectl -n "$K8S_NAMESPACE" rollout status deploy/"$K8S_DEPLOYMENT" --timeout=5m

      - name: Show services (optional)
        run: kubectl -n "$K8S_NAMESPACE" get svc
